// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Counter View component renders Counter component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Badge
    bsClass="badge"
    onClick={[Function]}
    onContextMenu={[Function]}
    pullRight={false}
    style={
        Object {
            "cursor": "pointer",
            "display": "inline-block",
            "margin": "5px",
            "width": "50px",
          }
    }
/>,
  "nodes": Array [
    <Badge
      bsClass="badge"
      onClick={[Function]}
      onContextMenu={[Function]}
      pullRight={false}
      style={
            Object {
                  "cursor": "pointer",
                  "display": "inline-block",
                  "margin": "5px",
                  "width": "50px",
                }
      }
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <CounterView
        counter={
                Counter {
                        "_id": "1",
                        "count": 0,
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": CounterView {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "counter": Counter {
            "_id": "1",
            "count": 0,
          },
        },
        "refs": Object {},
        "render": [Function],
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Badge
          bsClass="badge"
          onClick={[Function]}
          onContextMenu={[Function]}
          pullRight={false}
          style={
                    Object {
                              "cursor": "pointer",
                              "display": "inline-block",
                              "margin": "5px",
                              "width": "50px",
                            }
          }
/>,
        "_debugID": 2,
        "_renderedOutput": <Badge
          bsClass="badge"
          onClick={[Function]}
          onContextMenu={[Function]}
          pullRight={false}
          style={
                    Object {
                              "cursor": "pointer",
                              "display": "inline-block",
                              "margin": "5px",
                              "width": "50px",
                            }
          }
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CounterView
    counter={
        Counter {
            "_id": "1",
            "count": 0,
          }
    }
/>,
}
`;
